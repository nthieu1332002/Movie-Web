{"ast":null,"code":"var _jsxFileName = \"D:\\\\Html\\\\JS Practice\\\\React\\\\Project\\\\final-project-movie\\\\src\\\\components\\\\main-slider\\\\MainSlider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Autoplay } from 'swiper';\nimport \"swiper/css\";\nimport \"./swiper.css\";\nimport \"swiper/css/autoplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainSlider = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [idMovie, setIdMovie] = useState(0);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const getMovies = async () => {\n      const api = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`);\n      const data = await api.json();\n      setMovies(data.results.slice(0, 4));\n    };\n\n    getMovies();\n  }, []);\n  useEffect(() => {\n    const handleClick = () => {\n      navigate(\"/detail/\" + idMovie);\n    };\n\n    handleClick();\n  }, [idMovie]);\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    modules: [Autoplay],\n    loop: true,\n    autoplay: {\n      delay: 5000\n    },\n    slidesPerView: 1,\n    scrollbar: {\n      draggable: true\n    },\n    children: movies.map(movie => {\n      const {\n        id,\n        title,\n        overview,\n        backdrop_path,\n        poster_path\n      } = movie;\n      const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n      const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\n      return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-slide\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"slide-background\",\n            src: backdropPath,\n            alt: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"movie-title\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-description\",\n              children: overview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-action\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"movie-watch-now\",\n                onClick: () => setIdMovie(idMovie => idMovie + id),\n                children: \"Watch now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"movie-trailer\",\n                children: \"trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-poster\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: posterPath,\n              alt: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainSlider, \"TQTE+D842K30ODgEH2re55aZPvQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = MainSlider;\nexport default MainSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainSlider\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Swiper","SwiperSlide","Autoplay","MainSlider","movies","setMovies","idMovie","setIdMovie","navigate","getMovies","api","fetch","process","env","REACT_APP_API_KEY","data","json","results","slice","handleClick","delay","draggable","map","movie","id","title","overview","backdrop_path","poster_path","backdropPath","posterPath"],"sources":["D:/Html/JS Practice/React/Project/final-project-movie/src/components/main-slider/MainSlider.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Autoplay } from 'swiper';\r\nimport \"swiper/css\";\r\nimport \"./swiper.css\";\r\nimport \"swiper/css/autoplay\";\r\n\r\nconst MainSlider = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [idMovie, setIdMovie] = useState(0);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      const api = await fetch(\r\n        `https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\r\n      );\r\n\r\n      const data = await api.json();\r\n      setMovies(data.results.slice(0, 4));\r\n    };\r\n    getMovies();\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    const handleClick = () => {\r\n      navigate(\"/detail/\" + idMovie);\r\n    };\r\n    handleClick();\r\n  }, [idMovie])\r\n\r\n  return (\r\n    <Swiper\r\n      modules={[Autoplay]}\r\n      loop={true}\r\n      autoplay={{delay: 5000}}\r\n      slidesPerView={1}\r\n      scrollbar={{ draggable: true }}\r\n    >\r\n      {movies.map((movie) => {\r\n        const { id, title, overview, backdrop_path, poster_path } = movie;\r\n        const backdropPath = `https://image.tmdb.org/t/p/original${backdrop_path}`;\r\n        const posterPath = `https://image.tmdb.org/t/p/original${poster_path}`;\r\n        return (\r\n          <SwiperSlide key={id}>\r\n            <div className=\"main-slide\">\r\n              <img\r\n                className=\"slide-background\"\r\n                src={backdropPath}\r\n                alt={title}\r\n              />\r\n              <div className=\"movie-info\">\r\n                <h1 className=\"movie-title\">{title}</h1>\r\n                <p className=\"movie-description\">{overview}</p>\r\n                <div className=\"movie-action\">\r\n                  <button className=\"movie-watch-now\" onClick={() => setIdMovie((idMovie) => idMovie + id)}>Watch now</button>\r\n                  <button className=\"movie-trailer\">trailer</button>\r\n                </div>\r\n              </div>\r\n              <div className=\"movie-poster\">\r\n                <img src={posterPath} alt={title} />\r\n              </div>\r\n            </div>\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default MainSlider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}