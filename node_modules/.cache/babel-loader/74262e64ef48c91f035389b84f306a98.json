{"ast":null,"code":"var _jsxFileName = \"D:\\\\Html\\\\JS Practice\\\\React\\\\Project\\\\final-project-movie\\\\src\\\\components\\\\Caster\\\\CasterList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CasterList = props => {\n  _s();\n\n  const [caster, setCaster] = useState([]);\n  useEffect(() => {\n    const getCasters = async () => {\n      const api = await fetch(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n      const data = await api.json();\n      setCaster(data.cast.slice(0, 5));\n    };\n\n    getCasters();\n  }, [props.id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: caster.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CasterList, \"Ehmu0wDn8cxINdbYZOHSK/xbX/g=\");\n\n_c = CasterList;\nexport default CasterList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasterList\");","map":{"version":3,"names":["React","useState","useEffect","CasterList","props","caster","setCaster","getCasters","api","fetch","id","process","env","REACT_APP_API_KEY","data","json","cast","slice","map","item","name"],"sources":["D:/Html/JS Practice/React/Project/final-project-movie/src/components/Caster/CasterList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst CasterList = props => {\r\n  const [caster, setCaster] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCasters = async () => {\r\n      const api = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n      );\r\n      const data = await api.json();\r\n      setCaster(data.cast.slice(0, 5));\r\n    };\r\n    getCasters();\r\n  }, [props.id]);\r\n  return (\r\n    <div>\r\n        {caster.map((item) => {\r\n            return (\r\n                <p key={item.id}>{item.name}</p>\r\n            )\r\n        })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CasterList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAAA;;EAC1B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMK,UAAU,GAAG,YAAY;MAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,sCAAqCL,KAAK,CAACM,EAAG,oBAAmBC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAD3E,CAAvB;MAGA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;MACAT,SAAS,CAACQ,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAAT;IACD,CAND;;IAOAV,UAAU;EACX,CATQ,EASN,CAACH,KAAK,CAACM,EAAP,CATM,CAAT;EAUA,oBACE;IAAA,UACKL,MAAM,CAACa,GAAP,CAAYC,IAAD,IAAU;MAClB,oBACI;QAAA,UAAkBA,IAAI,CAACC;MAAvB,GAAQD,IAAI,CAACT,EAAb;QAAA;QAAA;QAAA;MAAA,QADJ;IAGH,CAJA;EADL;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAtBD;;GAAMP,U;;KAAAA,U;AAwBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}