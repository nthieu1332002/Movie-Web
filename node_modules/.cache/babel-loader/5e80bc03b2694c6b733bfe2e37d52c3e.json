{"ast":null,"code":"var _jsxFileName = \"D:\\\\Html\\\\JS Practice\\\\React\\\\Project\\\\final-project-movie\\\\src\\\\components\\\\Caster\\\\CasterList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CasterList = props => {\n  _s();\n\n  const [caster, setCaster] = useState([]);\n  useEffect(() => {\n    const getCasters = async () => {\n      const api = await fetch(`https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`);\n      const data = await api.json();\n      setCaster(data.cast.slice(0, 5));\n      console.log(caster);\n    };\n\n    getCasters();\n  }, [props.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CasterWrapper, {\n      children: caster.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caster-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original${item.profile_path}`,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CasterList, \"Ehmu0wDn8cxINdbYZOHSK/xbX/g=\");\n\n_c = CasterList;\nconst CasterWrapper = styled.div`\n  display: flex;\n  .caster-card {\n    flex: 1;\n    margin-right: 1rem;\n    text-align: center;\n    max-width: 100%;\n    max-height: 100px;\n  }\n  .caster-card img{\n    max-width: 100%;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    border-radius: 0.8rem;\n    filter: brightness(80%);\n    &:hover {\n      filter: brightness(100%);\n    }\n  }\n`;\n_c2 = CasterWrapper;\nexport default CasterList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CasterList\");\n$RefreshReg$(_c2, \"CasterWrapper\");","map":{"version":3,"names":["React","useState","useEffect","styled","CasterList","props","caster","setCaster","getCasters","api","fetch","id","process","env","REACT_APP_API_KEY","data","json","cast","slice","console","log","map","item","profile_path","name","CasterWrapper","div"],"sources":["D:/Html/JS Practice/React/Project/final-project-movie/src/components/Caster/CasterList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nconst CasterList = (props) => {\r\n\r\n  const [caster, setCaster] = useState([]);\r\n  useEffect(() => {\r\n    const getCasters = async () => {\r\n\r\n      const api = await fetch(\r\n        `https://api.themoviedb.org/3/movie/${props.id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n      );\r\n      const data = await api.json();\r\n      setCaster(data.cast.slice(0, 5));\r\n      console.log(caster);\r\n    };\r\n    getCasters();\r\n  }, [props.id]);\r\n  \r\n  return (\r\n    <>\r\n    <CasterWrapper>\r\n      {caster.map((item) => {\r\n        return (\r\n          <div className=\"caster-card\" key={item.id}>\r\n            <img src={`https://image.tmdb.org/t/p/original${item.profile_path}`} alt={item.name}/>\r\n            <p>{item.name}</p>\r\n          </div>\r\n        )\r\n      })}\r\n    </CasterWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CasterWrapper = styled.div`\r\n  display: flex;\r\n  .caster-card {\r\n    flex: 1;\r\n    margin-right: 1rem;\r\n    text-align: center;\r\n    max-width: 100%;\r\n    max-height: 100px;\r\n  }\r\n  .caster-card img{\r\n    max-width: 100%;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    border-radius: 0.8rem;\r\n    filter: brightness(80%);\r\n    &:hover {\r\n      filter: brightness(100%);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CasterList;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAE5B,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMM,UAAU,GAAG,YAAY;MAE7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACpB,sCAAqCL,KAAK,CAACM,EAAG,oBAAmBC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,iBAD3E,CAAvB;MAGA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAJ,EAAnB;MACAT,SAAS,CAACQ,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAAT;MACAC,OAAO,CAACC,GAAR,CAAYd,MAAZ;IACD,CARD;;IASAE,UAAU;EACX,CAXQ,EAWN,CAACH,KAAK,CAACM,EAAP,CAXM,CAAT;EAaA,oBACE;IAAA,uBACA,QAAC,aAAD;MAAA,UACGL,MAAM,CAACe,GAAP,CAAYC,IAAD,IAAU;QACpB,oBACE;UAAK,SAAS,EAAC,aAAf;UAAA,wBACE;YAAK,GAAG,EAAG,sCAAqCA,IAAI,CAACC,YAAa,EAAlE;YAAqE,GAAG,EAAED,IAAI,CAACE;UAA/E;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA,UAAIF,IAAI,CAACE;UAAT;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAAkCF,IAAI,CAACX,EAAvC;UAAA;UAAA;UAAA;QAAA,QADF;MAMD,CAPA;IADH;MAAA;MAAA;MAAA;IAAA;EADA,iBADF;AAcD,CA9BD;;GAAMP,U;;KAAAA,U;AAgCN,MAAMqB,aAAa,GAAGtB,MAAM,CAACuB,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMD,a;AAsBN,eAAerB,UAAf"},"metadata":{},"sourceType":"module"}