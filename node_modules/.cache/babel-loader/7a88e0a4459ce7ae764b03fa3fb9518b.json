{"ast":null,"code":"var _jsxFileName = \"D:\\\\Html\\\\JS Practice\\\\React\\\\Project\\\\final-project-movie\\\\src\\\\components\\\\slider\\\\Slider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport Card from \"../card-movie/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = props => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const getMovies = async () => {\n      let url = '';\n\n      switch (props.type) {\n        case 'similar':\n          url = `https://api.themoviedb.org/3/movie/${props.id}/similar?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`;\n          break;\n\n        default:\n          url = 'none';\n      }\n\n      const api = await fetch(url);\n      const data = await api.json();\n      setMovies(data.results);\n    };\n\n    getMovies();\n  }, [props.id, props.type]);\n  console.log(movies);\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    spaceBetween: 10,\n    slidesPerView: 5,\n    scrollbar: {\n      draggable: true\n    },\n    children: \"hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["React","useState","useEffect","Swiper","SwiperSlide","Card","Slider","props","movies","setMovies","getMovies","url","type","id","process","env","REACT_APP_API_KEY","api","fetch","data","json","results","console","log","draggable"],"sources":["D:/Html/JS Practice/React/Project/final-project-movie/src/components/slider/Slider.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport \"swiper/css\";\r\n\r\nimport Card from \"../card-movie/Card\";\r\n\r\nconst Slider = (props) => {\r\n  const [movies, setMovies] = useState([]);\r\n    \r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n        let url = '';\r\n        switch (props.type) {\r\n            case 'similar': \r\n                url = `https://api.themoviedb.org/3/movie/${props.id}/similar?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\r\n                break;\r\n            default: url= 'none';\r\n        }\r\n      const api = await fetch(url);\r\n      const data = await api.json();\r\n      setMovies(data.results);\r\n    };\r\n    getMovies();\r\n}, [props.id, props.type]);\r\n\r\nconsole.log(movies);\r\n  console.log(props);\r\n  return (\r\n    <Swiper spaceBetween={10} slidesPerView={5} scrollbar={{ draggable: true }}>\r\n      hello\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,OAAO,YAAP;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAAA;;EACxB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,YAAY;MAC1B,IAAIC,GAAG,GAAG,EAAV;;MACA,QAAQJ,KAAK,CAACK,IAAd;QACI,KAAK,SAAL;UACID,GAAG,GAAI,sCAAqCJ,KAAK,CAACM,EAAG,oBAAmBC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,wBAAtG;UACA;;QACJ;UAASL,GAAG,GAAE,MAAL;MAJb;;MAMF,MAAMM,GAAG,GAAG,MAAMC,KAAK,CAACP,GAAD,CAAvB;MACA,MAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;MACAX,SAAS,CAACU,IAAI,CAACE,OAAN,CAAT;IACD,CAXD;;IAYAX,SAAS;EACZ,CAdU,EAcR,CAACH,KAAK,CAACM,EAAP,EAAWN,KAAK,CAACK,IAAjB,CAdQ,CAAT;EAgBFU,OAAO,CAACC,GAAR,CAAYf,MAAZ;EACEc,OAAO,CAACC,GAAR,CAAYhB,KAAZ;EACA,oBACE,QAAC,MAAD;IAAQ,YAAY,EAAE,EAAtB;IAA0B,aAAa,EAAE,CAAzC;IAA4C,SAAS,EAAE;MAAEiB,SAAS,EAAE;IAAb,CAAvD;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1BD;;GAAMlB,M;;KAAAA,M;AA4BN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}